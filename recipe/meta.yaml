{% set name = "momentum" %}
{% set version = "0.1.16" %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/facebookincubator/momentum/archive/v{{ version }}.tar.gz
    sha256: f2371b794b8510607c722ff64c9a0e77a99c7c3389f1e41be981ddc8824657c0

build:
  number: 2
  skip: true  # [py<310]

outputs:
  - name: momentum-cpp
    script: build_cpp.sh  # [unix]
    script: bld_cpp.bat  # [win]
    build:
      skip:
        - true  # [cuda_compiler_version != "None"]
      run_exports:
        - {{ pin_subpackage('momentum-cpp', max_pin='x.x') }}
      ignore_run_exports:
        - ceres-solver
        - drjit-cpp
        - gflags
        - librerun-sdk
        - openfbx
        - python
        - re2
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - libboost-devel
        - cmake
        - gtest  # [build_platform == target_platform]
        - ninja  # [not win]
        - python
      host:
        - ceres-solver
        - cli11
        - dispenso
        - drjit-cpp
        - eigen
        - ezc3d
        - fmt
        - fx-gltf
        - libblas  # [win]
        - libcblas  # [win]
        - librerun-sdk
        - ms-gsl
        - nlohmann_json
        - openfbx
        - python  # [linux]
        - re2
        - spdlog
      run:
        - dispenso
        - gflags
        - libdeflate
        - python  # [linux]
    test:
      commands:
        - test -f $PREFIX/lib/cmake/momentum/momentum-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\momentum\\momentum-config.cmake exit 1  # [win]

  - name: pymomentum
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    build:
      string: cpu_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
      string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
      skip: true  # [win]
      skip: true  # [ppc64le]
      skip: true  # [aarch64 and cuda_compiler_version == "12.0"]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - {{ compiler('cuda') }}    # [cuda_compiler_version != "None"]
        {% if cuda_major >= 12 %}
        - cuda-driver-dev           # [build_platform != target_platform]
        - cuda-cudart-dev           # [build_platform != target_platform]
        - cuda-nvrtc-dev            # [build_platform != target_platform]
        - cuda-nvtx-dev             # [build_platform != target_platform]
        - cuda-nvml-dev             # [build_platform != target_platform]
        - cuda-profiler-api         # [build_platform != target_platform]
        - libcublas-dev             # [build_platform != target_platform]
        - libcufft-dev              # [build_platform != target_platform]
        - libcurand-dev             # [build_platform != target_platform]
        - libcusolver-dev           # [build_platform != target_platform]
        - libcusparse-dev           # [build_platform != target_platform]
        {% endif %}
        - libboost-devel
        - cmake
        - gtest
        - ninja  # [not win]
        - pip
        - pybind11
        - python
      host:
        # GPU requirements
        - cudnn                                     # [cuda_compiler_version != "None"]
        - nccl                                      # [cuda_compiler_version != "None"]
        - magma                                     # [cuda_compiler_version != "None"]
        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
        {% if cuda_major >= 12 %}
        - cuda-driver-dev
        - cuda-cudart-dev
        - cuda-nvrtc-dev
        - cuda-nvtx-dev
        - cuda-nvml-dev
        - cuda-profiler-api
        - libcublas-dev
        - libcufft-dev
        - libcurand-dev
        - libcusolver-dev
        - libcusparse-dev
        {% endif %}
        # other requirements
        - ceres-solver
        - cli11
        - dispenso
        - drjit-cpp
        - eigen
        - ezc3d
        - fmt
        - fx-gltf
        - libblas  # [win]
        - libcblas  # [win]
        - librerun-sdk
        - ms-gsl
        - nlohmann_json
        - openfbx
        - python  # [linux]
        - re2
        - setuptools
        - spdlog
        - pip
        - python
        - pytorch
        - numpy
      run:
        # GPU requirements without run_exports
        - {{ pin_compatible('cudnn') }}  # [cuda_compiler_version != "None"]
        - dispenso
        - gflags
        - libdeflate
        - numpy
        - python
        - pytorch
    test:
      imports:
        - pymomentum.geometry
        - pymomentum.quaternion
        - pymomentum.skel_state

  - name: momentum
    build:
      run_exports:
        - {{ pin_subpackage('momentum-cpp', max_pin='x.x') }}
    requirements:
      run:
        - {{ pin_subpackage('momentum-cpp', exact=True) }}
        - {{ pin_subpackage('pymomentum', exact=True) }}  # [linux and not ppc64le]
        - {{ pin_subpackage('pymomentum', exact=True) }}  # [osx]
        - {{ pin_subpackage('pymomentum', exact=True) }}  # [not(aarch64 and cuda_compiler_version == "12.0")]
        - python
        - numpy
    test:
      commands:
        - test -f $PREFIX/lib/cmake/momentum/momentum-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\momentum\\momentum-config.cmake exit 1  # [win]

about:
  home: https://facebookincubator.github.io/momentum/
  summary: 'A library for human kinematic motion and numerical optimization solvers to apply human motion'
  description: |
    A library for human kinematic motion and numerical optimization solvers to apply human motion
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/facebookincubator/momentum

extra:
  recipe-maintainers:
    - jeongseok-meta
